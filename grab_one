#!/bin/bash

# Logical flow:
#
# If there is a PID file
#  If the PID is valid
#   Exit
# (Over)Write a PID file.
# If we were supplied a channel name:
#  get its url file
# Otherwise
#  Find the oldest url file
# Go to the folder containing that url file.
# touch the url file
# Download everything from the url specified in the url file.
# Update the file's timestamp to the stream's timestamp if possible
# Sort the files by date
# Create an sha256sums.part file
# Rename sha256sums.part to sha256sums
# Remove the PID file
# Exit

BASEDIR=/srv/hackgrab
HOSTNAME=`hostname`

cd ${BASEDIR}/content

if [ -e /dev/shm/Hackgrab_PID ]
then
    OLDPID=`cat /dev/shm/Hackgrab_PID`
    if ps -p ${OLDPID}
    then
	exit 2
    fi
fi

echo $$ > /dev/shm/Hackgrab_PID

if [ "${1}" ]
then
    TORUN="${1}/url"
else
    TORUN=`ls -tr */url | head -n1`
fi

FOLDER=`dirname "${TORUN}"`

echo -n "${HOSTNAME} started ${FOLDER} at "
date +"%Y-%m-%d %H:%M:%S"

cd "${BASEDIR}/content/${FOLDER}"

touch url

if [ -e .lock ]
then
    exit 3
fi

touch .lock

if [ -x dothis ]
then
    echo "Running pre-download script."
    echo "Prescript   ${FOLDER}" > ${BASEDIR}/metadata/status_${HOSTNAME}
    
    if ./dothis
    then
	rm dothis
    else
	chmod -x dothis
    fi
fi

URL="`cat url`"

echo "Downloading ${FOLDER}" > ${BASEDIR}/metadata/status_${HOSTNAME} && \
    /usr/local/bin/yt-dlp --ignore-errors --write-description --download-archive archive "${URL}"

echo "Sorting     ${FOLDER}" > ${BASEDIR}/metadata/status_${HOSTNAME}

shopt -s nullglob 

for i in *.mp4 *.webm
do
    #Extract the date
    echo Timestamping ${i}
    DATE=`/usr/bin/mediainfo "${i}" | grep "Tagged date" | head -n1 | cut -f2 -d":"`

    #If there is one, use it to set the file's timestamp.
    if [ "${DATE}" ]
    then
	touch --date="${DATE}" "${i}"
    fi
done

${BASEDIR}/bin/datesort.py

echo "Hashing     ${FOLDER}" > ${BASEDIR}/metadata/status_${HOSTNAME} && \
    #sha256sum */*/*/*.mp4 | tee sha256sums.part && \
    #mv sha256sums.part sha256sums
    ${BASEDIR}/bin/update_hash.py

rm -f .lock

[ -e `date +"%Y/%m"` ] || [ -e `date +"%Y/%m" --date="2 months ago"` ]  || [ -e  `date +"%Y/%m" --date="2 months ago"` ] || (mv -f url url_hold && echo "Deactivated ${FOLDER} due to inactivity.")

cd ${BASEDIR} && rm /dev/shm/Hackgrab_PID && echo "Idle" > ${BASEDIR}/metadata/status_${HOSTNAME}

echo -n "${HOSTNAME} completed ${FOLDER} at "
date +"%Y-%m-%d %H:%M:%S"
echo

